# ╔══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
# ║ GuardDuty S3 Malware Protection Blog Post Solution - CloudFormation Template                                                                             ║
# ╚══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

AWSTemplateFormatVersion: "2010-09-09"
Metadata:
    Version: "v.1.0.2"
Description: "CloudFormation template for creating the IAM PassRole and Policy for GuardDuty Malware Protection for S3"

# ╔══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
# ║ CloudFormation Template Parameters                                                                                                               ║
# ╠═══════════════════════════════╤════════════════╤═════════════════════════════════════════════════════════════════════════════════════════════════╣
# ║ dd                            │ String (list)  │ dddd                                                                                            ║
# ╚═══════════════════════════════╧════════════════╧═════════════════════════════════════════════════════════════════════════════════════════════════╝
Parameters:
    IAMS3MalwareBucketName:
      Type: String
      Default: S3MalwareProtection-BucketName-
      Description: IAM role to be created for S3 Malware scanning and optionally tagging the S3 objects
      ConstraintDescription: You must specify a new IAM role to be created for S3 Malware scanning to be used

    NewExistingS3Bucket:
      Description: Should a new S3 bucket be created or use an existing bucket
      Default: new
      Type: String
      AllowedValues: [new, existing]
      ConstraintDescription: must specify new or existing.

    S3MalwareProtectedBucketName:
      Type: String
      Description: New or existing S3 bucket name which will be enabled for S3 Malware Protection

    CreateBucketKMSKey:
      Description: Should a KMS key be created for the S3 bucket
      Default: yes
      Type: String
      AllowedValues: [yes, no]
      ConstraintDescription: must specify yes or no.
    
Conditions:
  CreateKMSKey: !Equals [!Ref CreateBucketKMSKey, yes]
  UseExistingBucket: !Equals [!Ref NewExistingS3Bucket, existing]
  UseNewBucket: !Equals [!Ref NewExistingS3Bucket, new]
  UseKMSKey: !And
    - !Condition 'CreateKMSKey'
    - !Condition 'UseExistingBucket'

# ╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
# ║ GuardDuty S3 Malware Scanning - CloudFormation Template Resources                                                                                                   ║
# ╠═══════════════════════════════════════════╤═══════════════════════════════════╤═════════════════════════════════════════════════════════════════════════════════════╣
# ║ dddd                                      │ AWS::IAM::ManagedPolicy           │ Custom policy to provide                                                            ║
# ╚═══════════════════════════════════════════╧═══════════════════════════════════╧═════════════════════════════════════════════════════════════════════════════════════╝
Resources:
  S3MalwareProtectedBucket:
      Type: AWS::S3::Bucket
      Condition: UseNewBucket
      Properties:
        BucketName: !Ref S3MalwareProtectedBucketName

  IAMS3MalwareBucketPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      Description: Policy for allowing GuardDuty S3 malware protection to access the required services
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
            - Sid: AllowManagedRuleToSendS3EventsToGuardDuty
              Effect: Allow
              Action:
                - 'events:PutRule'
                - 'events:DeleteRule'
                - 'events:PutTargets'
                - 'events:RemoveTargets'
              Resource:
                - !Sub 'arn:${AWS::Partition}:events:${AWS::Region}:${AWS::AccountId}:rule/DO-NOT-DELETE-AmazonGuardDutyMalwareProtectionS3*'
              Condition:
                StringLike:
                  events:ManagedBy: "malware-protection-plan.guardduty.amazonaws.com"
            - Sid: AllowGuardDutyToMonitorEventBridgeManagedRule
              Effect: Allow
              Action:
                - 'events:DescribeRule'
                - 'events:ListTargetsByRule'
              Resource:
              - !Sub 'arn:${AWS::Partition}:events:${AWS::Region}:${AWS::AccountId}:rule/DO-NOT-DELETE-AmazonGuardDutyMalwareProtectionS3*'
            - Sid: AllowPostScanTag
              Effect: Allow
              Action:
                - 'S3:PutObjectTagging'
                - 'S3:GetObjectTagging'
                - 'S3:PutObjectVersionTagging'
                - 'S3:GetObjectVersionTagging'
              Resource: 
                - !Sub 'arn:${AWS::Partition}:s3:::${S3MalwareProtectedBucketName}/*'
            - Sid: AllowEnableS3EventBridgeEvents
              Effect: Allow
              Action:
                - 's3:PutBucketNotification'
                - 's3:GetBucketNotification'
              Resource: 
                - !Sub 'arn:${AWS::Partition}:s3:::${S3MalwareProtectedBucketName}'
            - Sid: AllowPutValidationObject
              Effect: Allow
              Action:
                - 's3:PutObject'
              Resource: 
                - !Sub 'arn:${AWS::Partition}:s3:::${S3MalwareProtectedBucketName}/malware-protection-resource-validation-object'
            - Sid: AllowCheckBucketOwnership
              Effect: Allow
              Action:
                - 's3:ListBucket'
              Resource: 
                - !Sub 'arn:${AWS::Partition}:s3:::${S3MalwareProtectedBucketName}'
            - Sid: AllowMalwareScan
              Effect: Allow
              Action:
                - 's3:GetObject'
                - 's3:GetObjectVersion'
              Resource: 
                - !Sub 'arn:${AWS::Partition}:s3:::${S3MalwareProtectedBucketName}/*'
            - Sid: AllowDecryptForMalwareScan
              Effect: Allow
              Action:
                - 'kms:GenerateDataKey'
                - 'kms:Decrypt'
              Resource:
                - !Sub 'arn:${AWS::Partition}:kms:${AWS::Region}:${AWS::AccountId}:key/$KMSKeyforBucket'
              Condition:
                StringLike:
                  kms:ViaService: "s3.*.amazonaws.com"
  
  IAMS3MalwareBucketRole:
    Type: AWS::IAM::Role
    Properties:
      Path: "/service-role/"
      RoleName: !Ref IAMS3MalwareBucketName
      AssumeRolePolicyDocument: "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"malware-protection-plan.guardduty.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}"
      ManagedPolicyArns:
        - !Ref IAMS3MalwareBucketPolicy

  GuardDutyS3MalwareProtectionPlan:
        Type: AWS::GuardDuty::MalwareProtectionPlan
        Properties:
          Actions:
            Tagging:
              Status: ENABLED
          ProtectedResource:
            S3Bucket:
              BucketName: !Ref S3MalwareProtectedBucketName
          Role: !GetAtt IAMS3MalwareBucketRole.Arn
        DependsOn: "IAMS3MalwareBucketRole"
          
Outputs: 
  S3MalwareProtectionRole: 
    Description: IAM role created for S3 Malware Protection
    Value: !Ref IAMS3MalwareBucketRole
     
  S3MalwareProtectedBucketName: 
    Description: The bucket name which has been created and enabled for S3 Malware protection
    Value: !Ref S3MalwareProtectedBucketName
  