# ╔══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
# ║ GuardDuty S3 Malware Protection Blog Post Solution - CloudFormation Template                                                                             ║
# ╚══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

AWSTemplateFormatVersion: "2010-09-09"
Description: CloudFormation template for creating the IAM PassRole and Policy
  for GuardDuty Malware Protection for S3
Metadata:
  Version: v.1.0.2
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Deployment Scenario
        Parameters:
          - NewExistingS3Bucket
          - CreateBucketKMSKey
      - Label:
          default: S3 Bucket Configuration
        Parameters:
          - S3MalwareProtectedBucketName
      - Label:
          default: Encryption Configuration
        Parameters:
          - BucketKMSKey
          - S3BucketKMSKeyName
      - Label:
          default: IAM Role Configuration
        Parameters:
          - IAMS3MalwareBucketName
    ParameterLabels:
      NewExistingS3Bucket:
        default: Create a new bucket or use an existing bucket
      S3MalwareProtectedBucketName:
        default: Bucket name
      BucketKMSKey:
        default: Is the existing bucket using a KMS key?
      CreateBucketKMSKey:
        default: If "NEW", Should a KMS key be created for the new bucket?
      S3BucketKMSKeyName:
        default: KMS key name
      IAMS3MalwareBucketName:
        default: IAM role name to be created/used for S3 Malware Protection

# ╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
# ║ CloudFormation Template Parameters                                                                                                          ║
# ╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝
Parameters:
  IAMS3MalwareBucketName:
    Type: String
    Default: S3MalwareProtection-BucketName-
    Description: IAM role to be created for S3 Malware scanning and optionally
      tagging the S3 objects
    ConstraintDescription: You must specify a new IAM role to be created for S3
      Malware scanning to be used

  NewExistingS3Bucket:
    Description: Should a new S3 bucket be created or use an existing bucket
    Default: new
    Type: String
    AllowedValues:
      - new
      - existing
    ConstraintDescription: You must specify new or existing.

  S3MalwareProtectedBucketName:
    Type: String
    Description:
      New or existing S3 bucket name which will be enabled for S3 Malware
      Protection

  BucketKMSKey:
    Description: Is the existing S3 bucket encrypted with an existing KMS key?
    Default: "no"
    Type: String
    AllowedValues:
      - "yes"
      - "no"
    ConstraintDescription: You must specify yes or no.

  CreateBucketKMSKey:
    Description: Should a KMS key be created for the new S3 bucket
    Default: "yes"
    Type: String
    AllowedValues:
      - "yes"
      - "no"
    ConstraintDescription: You must specify yes or no.

  S3BucketKMSKeyName:
    Type: String
    Description: If you would like to use an existing KMS key or new KMS key,
      provide the key name here
    ConstraintDescription: You must specify a KMS key if the BucketKMSKey is "no".

  KMSKeyAdministratorRoleName:
    Type: String
    Description: Specify the key administrator role to be associated with the new KMS key

Conditions:
  # CreateKMSKey: !Equals [!Ref CreateBucketKMSKey, yes]
  CreateNewKMSKey: !Equals
    - !Ref CreateBucketKMSKey
    - "yes"
  CreateNewBucket: !Equals
    - !Ref NewExistingS3Bucket
    - "new"
  UseExistingBucket: !Equals
    - !Ref NewExistingS3Bucket
    - "existing"
  # UseExistingKMSKey: !Equals [!Ref BucketKMSKey, yes]
  ScenarioNewBucketNoKMS: !And
    - !Condition CreateNewBucket
    - !Not
      - !Condition CreateNewKMSKey
  ScenarioCreateNewBucketKMSKey: !And
    - !Condition CreateNewBucket
    - !Condition CreateNewKMSKey

# ╔═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
# ║ GuardDuty S3 Malware Scanning - CloudFormation Template Resources                                                                                     ║
# ╠═══════════════════════════════════════════╤════════════════════════════════════════╤══════════════════════════════════════════════════════════════════╣
# ║ S3MalwareProtectedBucket                  │ AWS::S3::Bucket                        │ New S3 bucket for malware scanning                               ║
# ║ IAMS3MalwareBucketPolicy                  │ AWS::IAM::ManagedPolicy                │ IAM managed policy for S3 malware scanning                       ║
# ║ IAMS3MalwareBucketRole                    │ AWS::IAM::Role                         │ IAM role using the managed policy for S3 malware scanning        ║
# ║ GuardDutyS3MalwareProtectionPlan          │ AWS::GuardDuty::MalwareProtectionPlan  │ GuardDuty S3 malware protection resource for the S3 bucket       ║
# ╚═══════════════════════════════════════════╧════════════════════════════════════════╧══════════════════════════════════════════════════════════════════╝
Resources:
  S3MalwareProtectedBucket:
    Type: AWS::S3::Bucket
    Condition: ScenarioNewBucketNoKMS
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      BucketName: !Ref S3MalwareProtectedBucketName
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  S3MalwareProtectedBucketKMSKey:
    Type: AWS::S3::Bucket
    Condition: ScenarioCreateNewBucketKMSKey
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      BucketName: !Ref S3MalwareProtectedBucketName
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              KMSMasterKeyID: !GetAtt
                - KMSKeyforBucket
                - Arn
              SSEAlgorithm: aws:kms
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  KMSKeyforBucket:
    Type: AWS::KMS::Key
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Condition: ScenarioCreateNewBucketKMSKey
    Properties:
      EnableKeyRotation: true
      KeyPolicy:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            AWS:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":iam::"
                  - Ref: AWS::AccountId
                  - :root
          Action:
            - kms:*
          Resource: "*"

  IAMS3MalwareBucketPolicy:
    Type: AWS::IAM::ManagedPolicy
    DeletionPolicy: Delete
    Properties:
      Description:
        Policy for allowing GuardDuty S3 malware protection to access the
        required services
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: AllowManagedRuleToSendS3EventsToGuardDuty
            Effect: Allow
            Action:
              - events:PutRule
              - events:DeleteRule
              - events:PutTargets
              - events:RemoveTargets
            Resource:
              - !Sub arn:${AWS::Partition}:events:${AWS::Region}:${AWS::AccountId}:rule/DO-NOT-DELETE-AmazonGuardDutyMalwareProtectionS3*
            Condition:
              StringLike:
                events:ManagedBy: malware-protection-plan.guardduty.amazonaws.com
          - Sid: AllowGuardDutyToMonitorEventBridgeManagedRule
            Effect: Allow
            Action:
              - events:DescribeRule
              - events:ListTargetsByRule
            Resource:
              - !Sub arn:${AWS::Partition}:events:${AWS::Region}:${AWS::AccountId}:rule/DO-NOT-DELETE-AmazonGuardDutyMalwareProtectionS3*
          - Sid: AllowPostScanTag
            Effect: Allow
            Action:
              - S3:PutObjectTagging
              - S3:GetObjectTagging
              - S3:PutObjectVersionTagging
              - S3:GetObjectVersionTagging
            Resource:
              - !Sub arn:${AWS::Partition}:s3:::${S3MalwareProtectedBucketName}/*
          - Sid: AllowEnableS3EventBridgeEvents
            Effect: Allow
            Action:
              - s3:PutBucketNotification
              - s3:GetBucketNotification
            Resource:
              - !Sub arn:${AWS::Partition}:s3:::${S3MalwareProtectedBucketName}
          - Sid: AllowPutValidationObject
            Effect: Allow
            Action:
              - s3:PutObject
            Resource:
              - !Sub arn:${AWS::Partition}:s3:::${S3MalwareProtectedBucketName}/malware-protection-resource-validation-object
          - Sid: AllowCheckBucketOwnership
            Effect: Allow
            Action:
              - s3:ListBucket
            Resource:
              - !Sub arn:${AWS::Partition}:s3:::${S3MalwareProtectedBucketName}
          - Sid: AllowMalwareScan
            Effect: Allow
            Action:
              - s3:GetObject
              - s3:GetObjectVersion
            Resource:
              - !Sub arn:${AWS::Partition}:s3:::${S3MalwareProtectedBucketName}/*
          - !If
            - ScenarioCreateNewBucketKMSKey
            - Sid: AllowDecryptForMalwareScan
              Effect: Allow
              Action:
                - kms:GenerateDataKey
                - kms:Decrypt
              Resource:
                - !Sub ${KMSKeyforBucket.Arn}
              Condition:
                StringLike:
                  kms:ViaService: s3.*.amazonaws.com
            - !Ref AWS::NoValue

  IAMS3MalwareBucketRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref IAMS3MalwareBucketName
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: malware-protection-plan.guardduty.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - !Ref IAMS3MalwareBucketPolicy

  GuardDutyS3MalwareProtectionPlan:
    Type: AWS::GuardDuty::MalwareProtectionPlan
    Properties:
      Actions:
        Tagging:
          Status: ENABLED
      ProtectedResource:
        S3Bucket:
          BucketName: !Ref S3MalwareProtectedBucketName
      Role: !GetAtt IAMS3MalwareBucketRole.Arn
    DependsOn: IAMS3MalwareBucketRole

  KMSKeyAlias:
    Type: AWS::KMS::Alias
    Condition: ScenarioCreateNewBucketKMSKey
    Properties:
      AliasName: alias/S3Bucket-kmskey-alias
      TargetKeyId: !Ref KMSKeyforBucket

Outputs:
  S3MalwareProtectionRole:
    Description: IAM role created for S3 Malware Protection
    Value: !Ref IAMS3MalwareBucketRole

  S3MalwareProtectedBucketName:
    Description:
      The bucket name which has been created and enabled for S3 Malware
      protection
    Value: !Ref S3MalwareProtectedBucketName
