# ╔══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
# ║ GuardDuty S3 Malware Protection Blog Post Solution - CloudFormation Template                                                                             ║
# ╚══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

AWSTemplateFormatVersion: "2010-09-09"
Metadata:
  Version: v.1.0.2
Description: CloudFormation template for creating the IAM PassRole and Policy
  for GuardDuty Malware Protection for S3

# ╔══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
# ║ CloudFormation Template Parameters                                                                                                               ║
# ╠═══════════════════════════════╤════════════════╤═════════════════════════════════════════════════════════════════════════════════════════════════╣
# ║ dd                            │ String (list)  │ dddd                                                                                            ║
# ╚═══════════════════════════════╧════════════════╧═════════════════════════════════════════════════════════════════════════════════════════════════╝
Parameters:
  IAMS3MalwareBucketName:
    Type: String
    Default: S3MalwareProtection-BucketName-
    Description: IAM role to be created for S3 Malware scanning and optionally
      tagging the S3 objects

  IAMLambdaS3CopyObjectName:
    Type: String
    Default: LambdaS3CopyObject-BucketName-
    Description: IAM role to be created for Copying S3 Objects

  S3MalwareProtectedBucketName:
    Type: String
    Description: S3 bucket name which will be created and enabled for S3 Malware Protection

  S3MalwareCleanBucketName:
    Type: String
    Description: S3 bucket name which will used as the destination for clean S3 objects

#    MalwareProtectedBucketTagKey:
#      Type: String
#      Description: Tag Key to be added to the S3 bucket to recognise its purpose is being protected by GuardDuty Malware Protection

#    MalwareProtectedBucketTagValue:
#      Type: String
#      Description: Tag Key Value to be added to the S3 bucket to recognise its purpose is being protected by GuardDuty Malware Protection
# ╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
# ║ GuardDuty S3 Malware Scanning - CloudFormation Template Resources                                                                                                   ║
# ╠═══════════════════════════════════════════╤═══════════════════════════════════╤═════════════════════════════════════════════════════════════════════════════════════╣
# ║ dddd                                      │ AWS::IAM::ManagedPolicy           │ Custom policy to provide                                                            ║
# ╚═══════════════════════════════════════════╧═══════════════════════════════════╧═════════════════════════════════════════════════════════════════════════════════════╝
Resources:
  S3MalwareProtectedBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref S3MalwareProtectedBucketName
  #        Tags:
  #          -
  #            Key : !Ref MalwareProtectedBucketTagKey
  #            Value : !Ref MalwareProtectedBucketTagValue
  S3MalwareCleanBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref S3MalwareCleanBucketName

  IAMS3MalwareBucketPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: Policy for allowing GuardDuty S3 malware protection to do it's things
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: AllowManagedRuleToSendS3EventsToGuardDuty
            Effect: Allow
            Action:
              - events:PutRule
              - events:DeleteRule
              - events:PutTargets
              - events:RemoveTargets
            Resource:
              - !Sub arn:${AWS::Partition}:events:${AWS::Region}:${AWS::AccountId}:rule/DO-NOT-DELETE-AmazonGuardDutyMalwareProtectionS3*
            Condition:
              StringLike:
                events:ManagedBy: malware-protection-plan.guardduty.amazonaws.com
          - Sid: AllowGuardDutyToMonitorEventBridgeManagedRule
            Effect: Allow
            Action:
              - events:DescribeRule
              - events:ListTargetsByRule
            Resource:
              - !Sub arn:${AWS::Partition}:events:${AWS::Region}:${AWS::AccountId}:rule/DO-NOT-DELETE-AmazonGuardDutyMalwareProtectionS3*
          - Sid: AllowPostScanTag
            Effect: Allow
            Action:
              - S3:PutObjectTagging
              - S3:GetObjectTagging
              - S3:PutObjectVersionTagging
              - S3:GetObjectVersionTagging
            Resource:
              - !Sub arn:${AWS::Partition}:s3:::${S3MalwareProtectedBucketName}/*
          - Sid: AllowEnableS3EventBridgeEvents
            Effect: Allow
            Action:
              - s3:PutBucketNotification
              - s3:GetBucketNotification
            Resource:
              - !Sub arn:${AWS::Partition}:s3:::${S3MalwareProtectedBucketName}
          - Sid: AllowPutValidationObject
            Effect: Allow
            Action:
              - s3:PutObject
            Resource:
              - !Sub arn:${AWS::Partition}:s3:::${S3MalwareProtectedBucketName}/malware-protection-resource-validation-object
          - Sid: AllowCheckBucketOwnership
            Effect: Allow
            Action:
              - s3:ListBucket
            Resource:
              - !Sub arn:${AWS::Partition}:s3:::${S3MalwareProtectedBucketName}
          - Sid: AllowMalwareScan
            Effect: Allow
            Action:
              - s3:GetObject
              - s3:GetObjectVersion
            Resource:
              - !Sub arn:${AWS::Partition}:s3:::${S3MalwareProtectedBucketName}/*
          - Sid: AllowDecryptForMalwareScan
            Effect: Allow
            Action:
              - kms:GenerateDataKey
              - kms:Decrypt
            Resource:
              - !Sub arn:${AWS::Partition}:kms:${AWS::Region}:${AWS::AccountId}:key/$KMSKeyforBucket
            Condition:
              StringLike:
                kms:ViaService: s3.*.amazonaws.com

  IAMLambdaS3CopyObjectPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: Policy for allowing Lambda to copy a tagged S3 Object
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: AllowGetObjectSourceBucket
            Effect: Allow
            Action:
              - s3:GetObject
              - s3:GetObjectTagging
            Resource:
              - !Sub arn:${AWS::Partition}:s3:::${S3MalwareProtectedBucketName}/*
          - Sid: AllowPutObjectDestinationBucket
            Effect: Allow
            Action:
              - s3:PutObject
              - s3:PutObjectTagging
            Resource:
              - !Sub arn:${AWS::Partition}:s3:::${S3MalwareCleanBucketName}/*
          - Sid: AllowLogs
            Effect: Allow
            Action:
              - logs:CreateLogGroup
            Resource:
              - !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:*
          - Sid: AllowLogStreams
            Effect: Allow
            Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource:
              - !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/GuardDuty-S3-${S3MalwareProtectedBucketName}:*

  IAMS3MalwareBucketRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /service-role/
      RoleName: !Ref IAMS3MalwareBucketName
      AssumeRolePolicyDocument: '{"Version":"2012-10-17","Statement":[{"Effect":"Allow","Principal":{"Service":"malware-protection-plan.guardduty.amazonaws.com"},"Action":"sts:AssumeRole"}]}'
      ManagedPolicyArns:
        - !Ref IAMS3MalwareBucketPolicy

  IAMLambdaS3CopyObjectRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /service-role/
      RoleName: !Ref IAMLambdaS3CopyObjectName
      AssumeRolePolicyDocument: '{"Version":"2012-10-17","Statement":[{"Effect":"Allow","Principal":{"Service":"lambda.amazonaws.com"},"Action":"sts:AssumeRole"}]}'
      ManagedPolicyArns:
        - !Ref IAMLambdaS3CopyObjectPolicy

  GuardDutyS3MalwareProtectionPlan:
    Type: AWS::GuardDuty::MalwareProtectionPlan
    Properties:
      Actions:
        Tagging:
          Status: ENABLED
      ProtectedResource:
        S3Bucket:
          BucketName: !Ref S3MalwareProtectedBucketName
      Role: !GetAtt IAMS3MalwareBucketRole.Arn
    DependsOn: IAMS3MalwareBucketRole

  CopyTaggedS3ObjectLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub GuardDuty-S3-${S3MalwareProtectedBucketName}
      Handler: index.lambda_handler
      Runtime: python3.10
      Architectures:
        - x86_64
      Code:
        ZipFile: |
          import os
          import boto3
          s3 = boto3.resource('s3')
          def lambda_handler(event, context):
                SOURCE_BUCKET=os.environ.get('SOURCE_BUCKET')
                DEST_BUCKET=os.environ.get('DEST_BUCKET')
                SOURCE_KEY=event['detail']['s3ObjectDetails']['objectKey']
                copy_source = {'Bucket': SOURCE_BUCKET, 'Key': SOURCE_KEY}
                s3.meta.client.copy(copy_source, DEST_BUCKET, SOURCE_KEY)

      Role: !GetAtt IAMLambdaS3CopyObjectRole.Arn
      Environment:
        Variables:
          SOURCE_BUCKET: !Ref S3MalwareProtectedBucketName
          DEST_BUCKET: !Ref S3MalwareCleanBucketName
      MemorySize: 128
      Timeout: 30

  GuardDutyCopyS3ObjectRule:
    Type: AWS::Events::Rule
    Properties:
      Description: !Sub GuardDuty Copy S3 Object Rule for source bucket
        ${S3MalwareProtectedBucketName}
      EventBusName: default
      Name: !Sub S3Malware-CopyS3Object-${S3MalwareProtectedBucketName}
      State: ENABLED
      EventPattern: !Sub '{"source":["aws.guardduty"],"detail-type":["GuardDuty
        Malware Protection Object Scan
        Result"],"detail":{"scanStatus":["COMPLETED"],"resourceType":["S3_OBJECT"],"s3ObjectDetails":{"bucketName":["${S3MalwareProtectedBucketName}"]},
        "scanResultDetails":{"scanResultStatus":["NO_THREATS_FOUND"]}}}'
      Targets:
        - Id: CopyTaggedS3ObjectLambdaFunction
          Arn: !GetAtt CopyTaggedS3ObjectLambdaFunction.Arn

  AccessEventsToInvokeLambda:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref CopyTaggedS3ObjectLambdaFunction
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt GuardDutyCopyS3ObjectRule.Arn

Outputs:
  S3MalwareProtectionRole:
    Description: IAM role created for S3 Malware Protection
    Value: !Ref IAMS3MalwareBucketRole

  IAMS3MalwareBucketRole:
    Description:
      IAM role created for copying the S3 tagged objects from source to
      destination
    Value: !Ref IAMLambdaS3CopyObjectRole

  S3MalwareProtectedBucketName:
    Description:
      The bucket name which has been created and enabled for S3 Malware
      protection
    Value: !Ref S3MalwareProtectedBucketName

  S3MalwareCleanBucketName:
    Description: The bucket name which has been created for clean S3 object to be copied to
    Value: !Ref S3MalwareCleanBucketName
